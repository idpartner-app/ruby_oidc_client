class IDPartner
  type SUPPORTED_AUTH_METHODS: Array[String]
  type SIGNING_ALG: String
  type ENCRYPTION_ALG: String
  type ENCRYPTION_ENC: String

  attr_reader config: Hash[Symbol, String], endpoints: Hash[Symbol, String]

  def initialize: (Hash[Symbol, String]) -> void

  def generate_proofs: -> Hash[Symbol, String]

  def get_authorization_url: (
    query: Hash[Symbol, String],
    proofs: Hash[Symbol, String],
    scope: Array[String],
    prompt: String,
    claims_object: Hash[Symbol, String]
  ) -> String

  def get_public_jwks: -> Hash[String, Array[untyped]]

  def token: (query: Hash[Symbol, String], proofs: Hash[Symbol, String]) -> Hash[String, String]

  def userinfo: (String) -> Hash[String, String]

  private

  def get_endpoints_from_well_known_config: -> void

  def create_request_object: (Hash[Symbol, untyped]) -> String

  def push_authorization_request: (Hash[Symbol, untyped]) -> Hash[String, untyped]

  def generate_code_challenge: (String) -> String

  def parse_private_key: (String) -> untyped

  def verify_jws: (String) -> Hash[Symbol, untyped]
end
